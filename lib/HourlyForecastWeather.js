(function() {

  var Forecast = require('../node_modules/forecast.io');
  var weather_module = require('./Weather_class');


  function HourlyForecastWeather(){

    var isSimulated = true;
    var forecast;

    if(process.env.FORECAST_KEY){
      var options = { APIKey: process.env.FORECAST_KEY };
      forecast = new Forecast(options);
      isSimulated = false;
    }


    this.getHourlyForcastWeatherConditions_byLatitudeLongitude = function(latitude, longitude, numberHours, callback){
      var hourlyForecastWeather = [];
      
      if(isSimulated){
        currentHour = new Date();
        for(var i=0; i<numberHours; i++){
          var tmp_forecastWeather = new weather_module.Weather(latitude, longitude, 'Celsius', currentHour);
          tmp_forecastWeather.read();
          hourlyForecastWeather.push(tmp_forecastWeather.get());
          currentHour.setHours(currentHour.getHours()+1);
        }
        console.log("Hourly Forecast Generated by Simulation!");
        callback(hourlyForecastWeather);
      }
      else{
        //invoke the real weather API
        forecast.get(latitude, longitude, function (err, res, data) {
          if (err) throw err;
          console.log("Hourly Forecast Weather Received by API!");
          
          hourly_forecast = data.hourly.data;
          for(var i=0; i<numberHours; i++){
            var tmp_forecastWeather = new weather_module.Weather(latitude, longitude, 'Celsius', new Date(hourly_forecast[i].time*1000));
            tmp_forecastWeather.setPrecipProbability(hourly_forecast[i].precipProbability);
            tmp_forecastWeather.setTemperature(hourly_forecast[i].temperature);
            tmp_forecastWeather.setHumidity(hourly_forecast[i].humidity);
            tmp_forecastWeather.setWindSpeed(hourly_forecast[i].windSpeed);
            tmp_forecastWeather.setLightIntensitiy(tmp_forecastWeather.convertIntoNumericalLightIntensity(hourly_forecast[i].icon));
            hourlyForecastWeather.push(tmp_forecastWeather.get());
          }
          callback(hourlyForecastWeather);
        });
      }
    }

    this.getHourlyForcastWeatherConditions_byCityName = function(city, callback){
      //todo - not now
      return -1;
    }

  }//end class HourlyForecastWeather


  exports.HourlyForecastWeather = HourlyForecastWeather;

})();